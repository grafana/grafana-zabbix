version: '3'

services:
  # Grafana
  grafana:
    image: grafana/grafana:10.1.2
    ports:
      - '3001:3000'
    volumes:
      - ../..:/grafana-zabbix
      - ../dashboards:/devenv/dashboards
      - ../grafana.ini:/etc/grafana/grafana.ini:ro
      - '../datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml'
      - '../dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml'

  # Zabbix
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-trunk
    ports:
      - '10051:10051'
    depends_on:
      - database
    environment:
      DB_SERVER_HOST: database
      DB_SERVER_PORT: 5432
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix
      POSTGRES_DB: zabbix
      ZBX_TIMEOUT: 10
      ZBX_STARTPOLLERS: 10
      ZBX_STARTPOLLERSUNREACHABLE: 5
      ZBX_DEBUGLEVEL: 3

  zabbix-web:
    image: zabbix/zabbix-web-apache-pgsql:alpine-trunk
    ports:
      - '8188:8080'
    depends_on:
      - database
      - zabbix-server
    environment:
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
      DB_SERVER_HOST: database
      DB_SERVER_PORT: 5432
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix
      POSTGRES_DB: zabbix

  database:
    image: postgres:16
    ports:
      - '15432:5432'
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix

  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-trunk
    environment:
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051

  #########################################################
  # Bootstrap config
  #########################################################

  bootstrap:
    build: ./bootstrap
    environment:
      ZBX_API_URL: http://zabbix-web:8080
      ZBX_API_USER: Admin
      ZBX_API_PASSWORD: zabbix
    depends_on:
      - database
      - zabbix-server
      - zabbix-web

  #########################################################
  # Fake agents
  #########################################################

  # backend
  redis_backend:
    image: redis:alpine

  zas_backend_01:
    build: ../zas-agent
    volumes:
      - ../zas-agent/conf/zas_scenario_backend.cfg:/etc/zas_scenario.cfg
    environment:
      REDIS_HOST: redis_backend
    # restart: always

  zas_backend_02:
    build: ../zas-agent
    volumes:
      - ../zas-agent/conf/zas_scenario_backend.cfg:/etc/zas_scenario.cfg
    environment:
      REDIS_HOST: redis_backend

  # frontend
  redis_frontend:
    image: redis:alpine

  zas_frontend_01:
    build: ../zas-agent
    volumes:
      - ../zas-agent/conf/zas_scenario_frontend.cfg:/etc/zas_scenario.cfg
    environment:
      REDIS_HOST: redis_frontend

  zas_frontend_02:
    build: ../zas-agent
    volumes:
      - ../zas-agent/conf/zas_scenario_frontend.cfg:/etc/zas_scenario.cfg
    environment:
      REDIS_HOST: redis_frontend
